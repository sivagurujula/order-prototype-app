{"version":3,"sources":["components/Appointment.js","containers/AppointmentsContainer.js","actions/GetAppointmentsAction.js","actions/constants/ActionConstants.js","components/PaymentForm.js","components/AddressForm.js","components/Review.js","components/Checkout.js","App.js","serviceWorker.js","reducers/appointmentsReducer.js","index.js","appointmentMsg.jpg"],"names":["Appointment","props","showOtherSlots","setState","reserveSlot","data","console","log","defaultSlot","slot","selectedAppointment","onSubmitReserve","history","push","chunk","appoitmentsArr","size","selectedAppId","output","max","length","j","buttonsData","slice","map","index","ToggleButton","variant","id","key","value","className","onClick","ToggleButtonGroup","name","type","formatDateTimeSlot","validFor","startDate","Date","startDateTime","timeString12hr","timeZone","hour12","hour","startHours","toLocaleTimeString","endHours","endDateTime","weekDayStr","toLocaleDateString","weekday","monthStr","month","getDate","getList","list","sort","a","b","isLoading","appointments","undefined","state","appointmentsFromAPI","reserveAppointment","this","fetchAppointments","nextProps","Fragment","Image","src","appMsg","disabled","Badge","ButtonToolbar","defaultValue","getAppointments","Component","AppointmentsContainer","connect","dispatch","appoitmentsStub","availableTimeSlot","appointment","appiontment","reservedAppointmentResponse","reserveAppointmentSucess","reserveAppoitmentsStub","PaymentForm","Typography","gutterBottom","Grid","container","spacing","item","xs","md","TextField","required","label","fullWidth","autoComplete","helperText","FormControlLabel","control","Checkbox","color","AddressForm","sm","products","desc","price","addresses","payments","detail","useStyles","makeStyles","theme","listItem","padding","total","fontWeight","title","marginTop","Review","classes","List","disablePadding","product","ListItem","ListItemText","primary","secondary","join","direction","payment","Copyright","align","Link","href","getFullYear","appBar","position","layout","width","marginLeft","marginRight","breakpoints","up","paper","marginBottom","stepper","buttons","display","justifyContent","button","steps","Checkout","React","useState","activeStep","setActiveStep","CssBaseline","Paper","component","Stepper","Step","StepLabel","step","Error","getStepContent","Button","App","Navbar","expand","bg","Brand","alt","height","Boolean","window","location","hostname","match","initState","appointmentsReducer","action","middleware","applyMiddleware","thunk","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.e484396c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\r\n// import {Redirect} from 'react-router-dom';\r\n\r\nimport { Badge, Image, ButtonToolbar } from 'react-bootstrap';\r\n\r\nimport appMsg from '../appointmentMsg.jpg'\r\n\r\nclass Appointment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            buttonsData: null,\r\n            defaultSlot: 'Mon 20 Jul 8am - 1pm',\r\n            selectedAppointment: null,\r\n            showOtherSlots: false,\r\n            appointmentsFromAPI: null,\r\n        }\r\n    }\r\n    showOtherSlots = () => {\r\n        this.setState({ showOtherSlots: true })\r\n    }\r\n    reserveSlot = (data) => {\r\n        console.log(\"Slot selected: \",data)  ;\r\n        this.setState({ showOtherSlots: true ,defaultSlot: data.slot, selectedAppointment: data });\r\n    }\r\n    onSubmitReserve = () =>{\r\n       // this.props.reserveAppointment(this.state.selectedAppointment);\r\n        //history.push('/AppointmentsContainer');\r\n        //return  <Redirect  to=\"/reserve/\" />\r\n        this.props.history.push('/reserve/');\r\n    }\r\n    chunk = (appoitmentsArr, size, selectedAppId) => {\r\n        let output = []\r\n        \r\n        const max = appoitmentsArr.length + (appoitmentsArr.length % size) + 1\r\n        for (let j = 0; j < max; j++) {\r\n            let appoitments = appoitmentsArr.slice((j)*size, (j+1)*size); \r\n            const buttonsData = appoitments.map((data, index) => {\r\n\r\n                return (\r\n\r\n                    <ToggleButton variant={selectedAppId === data.id ? \"success\" : \"light\"} key={data.id} value={data.id}\r\n                        className=\"rounded mb-0 mr-2 block-example border border-dark\"\r\n                        onClick={() => this.reserveSlot(data)}>\r\n                        {data.slot}</ToggleButton>\r\n\r\n                )\r\n            });\r\n            output.push(<ToggleButtonGroup name={'pickAppointment' + j} key={j}\r\n                size=\"lg\" className=\"mb-2\" type=\"radio\" >{buttonsData}<br /></ToggleButtonGroup>)\r\n        }\r\n        return output\r\n    }\r\n    getAppointments() {\r\n        let selectedAppId = this.state.selectedAppointment == null ? null : this.state.selectedAppointment.id;\r\n\r\n        if (selectedAppId == null) {\r\n            selectedAppId = 1;\r\n        }\r\n        const {appointmentsFromAPI} = this.state;\r\n        const buttonsData = this.chunk(appointmentsFromAPI === null?this.getList(this.props.appointments):appointmentsFromAPI, 5, selectedAppId);\r\n        // const buttonsData = appoitments.map( (data) =>{\r\n        //     return (\r\n        //       <ToggleButton variant={selectedAppId === data.id?\"success\":\"light\"} key={data.id} value={data.id}\r\n        //       className=\"rounded mb-0 mr-2 block-example border border-dark\"\r\n        //       onClick={()=> this.reserveSlot(data)}>\r\n        //          {data.slot}</ToggleButton>\r\n        //     )\r\n        //   });\r\n        \r\n        return buttonsData;\r\n    }\r\n    formatDateTimeSlot = (validFor) =>{\r\n        //const weekDays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n       // const month = ['Jan','Feb','Mar','Apr','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n        let startDate = new Date(validFor.startDateTime);\r\n        //let endDate = new Date(validFor.endDateTime);\r\n        const timeString12hr =     {timeZone:'UTC',hour12:true,hour:'numeric'};\r\n        const weekDay = {weekday: 'short'};\r\n        const month = {month: 'short'};\r\n        const startHours = startDate.toLocaleTimeString({},timeString12hr);\r\n        const endHours = new Date(validFor.endDateTime)\r\n                            .toLocaleTimeString({},timeString12hr);\r\n        const weekDayStr = startDate.toLocaleDateString({},weekDay);\r\n        const monthStr = startDate.toLocaleDateString({},month);\r\n        let convertedStr =  weekDayStr+ ' ' + startDate.getDate()+ \r\n                            ' '+monthStr + ' ' +\r\n                            ' '+ startHours +' - '+endHours;\r\n        return convertedStr;\r\n    }\r\n    getList = (list) => {\r\n        list.sort(function(a, b){\r\n            let startDateA = new Date(a.startDateTime);\r\n            let startDateB = new Date(b.startDateTime);\r\n            return startDateA - startDateB;\r\n        });\r\n        console.log('getList:: loading...',this.props.isLoading)\r\n        const appointments = (list === undefined) ? []:list.map( (data,index) => {\r\n            \r\n            return ({id:index+1,slot:this.formatDateTimeSlot(data),validFor:data})\r\n        })\r\n        console.log('appointmentsJSON: ',appointments)\r\n        const defaultSlot = appointments[0];        \r\n        \r\n        this.setState({...this.state,appointmentsFromAPI: appointments,defaultSlot:defaultSlot.slot,selectedAppointment:defaultSlot});\r\n        this.props.reserveAppointment(defaultSlot);\r\n        return appointments;\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetchAppointments();        \r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        \r\n        if (this.props.appointments !== nextProps.appointments){\r\n            console.log('nextProps',nextProps)\r\n            console.log('cuurentProps',this.props)\r\n            this.getList(nextProps.appointments);           \r\n        }\r\n    }\r\n    render() {\r\n        const { defaultSlot, showOtherSlots ,selectedAppointment} = this.state;\r\n        const {isLoading} = this.props;\r\n        return (\r\n            <React.Fragment>\r\n\r\n\r\n                <Image src={appMsg} /><br></br>\r\n                {isLoading &&\r\n                    <>\r\n                        Loading...\r\n                    </>\r\n                }\r\n                {!showOtherSlots && !isLoading  &&\r\n                    <>\r\n                        <h3> We've reserved the first available appointment</h3>\r\n                        <Button variant=\"success\" disabled className=\"rounded mb-0 mr-2 block-example border border-dark\">\r\n                            {defaultSlot}\r\n                        </Button>\r\n                        <Badge variant=\"success\">Reserved</Badge>\r\n                        <br></br><br></br>\r\n\r\n\r\n                        {/* <Button variant=\"primary\" onClick={() => this.showOtherSlots()}>Pick Another Slot?</Button>{' '} */}\r\n                    </>\r\n                }\r\n                {showOtherSlots &&\r\n                    <>\r\n\r\n                        <div className=\"container\">\r\n                            <h3 className=\"center\">Select an appointment</h3>\r\n                            <div className=\"box\">\r\n                                <ButtonToolbar name=\"pickAppointment\" defaultValue={selectedAppointment.id}>\r\n\r\n                                    {this.getAppointments()}\r\n\r\n                                </ButtonToolbar>\r\n\r\n                            </div>\r\n                            \r\n                        </div>\r\n\r\n                    </>\r\n                }\r\n                <Button variant=\"primary\" onClick={() => this.showOtherSlots()}>Pick Another Slot?</Button>{' '}\r\n                {/* <Button variant=\"primary\" onClick={() => this.onSubmitReserve()}>Continue</Button>{' '} */}\r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Appointment","import {connect} from 'react-redux'\r\nimport {fetchAppointments, reserveAppointment} from '../actions/GetAppointmentsAction'\r\nimport Appointment from '../components/Appointment'\r\n// import { withRouter } from \"react-router\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ...state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchAppointments : () =>{\r\n            dispatch(fetchAppointments())\r\n        },\r\n        reserveAppointment :(appiontment) =>{\r\n            dispatch(reserveAppointment(appiontment))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst AppointmentsContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Appointment)\r\n\r\n\r\nexport default AppointmentsContainer","import * as actions from './constants/ActionConstants'\r\nimport appoitmentsStub from '../data/appointmentsList.json';\r\nimport reserveAppoitmentsStub from '../data/reserveAppointment.json';\r\n\r\nexport function getAppointmentsRequest(){\r\n    return {\r\n        type: actions.GET_APPOINTMENTS_REQUEST,\r\n        isLoading: true\r\n    }\r\n}\r\n\r\nexport function getAppointmentsSucess(appointmentsList){\r\n    return {\r\n        type: actions.GET_APPOINTMENTS_SUCESS,\r\n        isLoading: false,\r\n        appointments: appointmentsList\r\n    }\r\n}\r\nexport function getAppointmentsFailure(message){\r\n    return {\r\n        type: actions.GET_APPOINTMENTS_FAILURE,\r\n        isLoading: false,\r\n        error: message\r\n    }\r\n}\r\nexport function reserveAppointmentRequest(appiontment){\r\n    return {\r\n        type: actions.RESERVE_APPOINTMENT_REQUEST,\r\n        isLoading: true,\r\n        reserveAppointmentRequest : appiontment\r\n    }\r\n}\r\n\r\nexport function reserveAppointmentSucess(appiontment){\r\n    return {\r\n        type: actions.RESERVE_APPOINTMENT_SUCESS,\r\n        isLoading: false,\r\n        reservedAppointmentResponse: appiontment\r\n    }\r\n}\r\nexport function reserveAppointmentFailure(message){\r\n    return {\r\n        type: actions.RESERVE_APPOINTMENT_FAILURE,\r\n        isLoading: false,\r\n        error: message\r\n    }\r\n}\r\nexport function reserveAppointment(appiontment){\r\n    console.log('reserveAppointment Input: ',appiontment)\r\n    return function(dispatch){\r\n        console.log(' reserveAppointment dispatch Request')\r\n        dispatch(reserveAppointmentSucess(reserveAppoitmentsStub))\r\n        console.log(' reserveAppointment dispatch Sucess')\r\n    }\r\n    // const payLoad = {\r\n    //     \"externalId\": \"432113\",\r\n    //     \"category\": \"intervention\",\r\n    //     \"description\": \"Fix an internet connexion problem for a customer\",\r\n    //     \"validFor\": {\r\n    //         \"startDateTime\": \"2020-07-15T14:00:00.071Z\",\r\n    //         \"endDateTime\": \"2020-07-15T16:00:00.071Z\"\r\n    //     },\r\n    //     \"attachment\": [\r\n    //         {\r\n    //             \"id\": \"4444\",\r\n    //             \"href\": \"https://host:port/documentManagement/customerContract/4444\",\r\n    //             \"isRef\": true,\r\n    //             \"@referredType\": \"CustomerContract\",\r\n    //             \"@baseType\": \"Attachment\"\r\n    //         }\r\n    //     ],\r\n    //     \"calendarEvent\": {\r\n    //         \"id\": \"33\",\r\n    //         \"href\": \" https://host:port/timeManagement/calendarEvent/33\",\r\n    //         \"name\": \"Outlook calendar event\"\r\n    //     },\r\n    //     \"relatedParty\": [\r\n    //         {\r\n    //             \"id\": \"32\",\r\n    //             \"href\": \"https://host:port/partyManagement/individual/32\",\r\n    //             \"name\": \"Kate Smith\",\r\n    //             \"role\": \"customer\",\r\n    //             \"@referredType\": \"Individual\"\r\n    //         },\r\n    //         {\r\n    //             \"id\": \"56\",\r\n    //             \"href\": \"https://host:port/partyManagement/individual/56\",\r\n    //             \"name\": \"John Doe\",\r\n    //             \"role\": \"technician\",\r\n    //             \"@referredType\": \"Individual\"\r\n    //         }\r\n    //     ],\r\n    //     \"RelatedPlace\": {\r\n    //         \"id\": \"888\",\r\n    //         \"href\": \"https://host:port/addressManagement/geographicAddress/888\",\r\n    //         \"name\": \"Main Home\",\r\n    //         \"role\": \"interventionAddress\",\r\n    //         \"@referredType\": \"GeographicAddress\"\r\n    //     },\r\n    //     \"relatedEntity\": [\r\n    //         {\r\n    //             \"id\": \"789\",\r\n    //             \"href\": \"https://host:port/troubleTicket/troubleTicket/789\",\r\n    //             \"name\": \"Full Fiber installation\",\r\n    //             \"role\": \"Problem description\",\r\n    //             \"@referredType\": \"InstallationTicket\"\r\n                \r\n    //         },\r\n    //         {\r\n    //             \"id\": \"465\",\r\n    //             \"href\": \"https://host:port/workForceManagement/workOrder/465\",\r\n    //             \"role\": \"work order description\",\r\n    //             \"name\": \"Work order generated for technician intervention\",\r\n    //             \"@referredType\": \"WorkOrder\"\r\n    //         }\r\n    //     ],\r\n    //     \"note\": [\r\n    //         {\r\n    //             \"date\": \"2020-07-04T11:00:18.071Z\",\r\n    //             \"author\": \"Ludovic Robert\",\r\n    //             \"text\": \"Problem explained to the technician\"\r\n    //         },\r\n    //         {\r\n    //             \"date\": \"2020-07-04T14:40:43.071Z\",\r\n    //             \"author\": \"Ludovic Robert\",\r\n    //             \"text\": \"Work order generated\"\r\n    //         }\r\n    //     ]\r\n    // }\r\n    // return function(dispatch,appiontment){\r\n    //     dispatch(reserveAppointmentRequest(appiontment))\r\n    //     fetch('https://067cf8a3-4274-4333-92c2-dcb4adb3fe28.mock.pstmn.io/appointment',{\r\n    //         method : 'POST',\r\n    //         headers: {\r\n    //             'Accept': 'application/json'\r\n    //         },\r\n    //         body : JSON.stringify(payLoad)\r\n    //     })\r\n    //     .then(async(resp) => {\r\n    //         const response = resp.json()\r\n    //         return response\r\n    //     })\r\n    //     .then(response => {\r\n    //         console.log(response)\r\n    //         dispatch(reserveAppointmentSucess(response))\r\n    //     })\r\n    //     .catch(error => {\r\n    //         console.log(\"error\" ,error);\r\n    //         dispatch(reserveAppointmentFailure(error.message))\r\n    //     })\r\n    // }\r\n}\r\n\r\nexport function fetchAppointments(){\r\n    console.log(' fetchAppointments')\r\n    return function(dispatch){\r\n        console.log(' dispatch Request')\r\n        dispatch(getAppointmentsSucess(appoitmentsStub.availableTimeSlot.map(appointment => appointment.validFor)))\r\n        console.log(' dispatch Sucess')\r\n    }\r\n    // const payLoad = {\r\n    //     \"requestedTimeSlot\": [\r\n    //         {\r\n    //             \"validFor\": {\r\n    //                 \"startDateTime\": \"2020-07-13T00:00:00.000Z\",\r\n    //                 \"endDateTime\": \"2020-07-21T00:00:00.000Z\"\r\n    //             }\r\n    //         }\r\n    //     ],\r\n    //     \"RelatedPlace\": {\r\n    //         \"id\": \"888\",\r\n    //         \"href\": \"https://host:port/addressManagement/geographicAddress/888\",\r\n    //         \"name\": \"Main Home\",\r\n    //         \"role\": \"interventionAddress\",\r\n    //         \"@referredType\": \"GeographicAddress\"\r\n    //     },\r\n    //     \"relatedEntity\": [\r\n    //         {\r\n    //             \"id\": \"789\",\r\n    //             \"href\": \"https://host:port/troubleTicket/troubleTicket/789\",\r\n    //             \"name\": \"Full Fiber installation\",\r\n    //             \"role\": \"Problem description\",\r\n    //             \"@referredType\": \"InstallationTicket\"\r\n    //         }\r\n    //     ]\r\n    // };\r\n    \r\n    // return function(dispatch){\r\n    //     dispatch(getAppointmentsRequest())\r\n    //     fetch('https://067cf8a3-4274-4333-92c2-dcb4adb3fe28.mock.pstmn.io/searchTimeSlot',{\r\n    //         method : 'POST',\r\n    //         headers: {\r\n    //             'Accept': 'application/json'\r\n    //         },\r\n    //         body : JSON.stringify(payLoad)\r\n    //     })\r\n    //     .then(async(resp) => {\r\n    //         const response = resp.json()\r\n    //         console.log('Response: ', resp)\r\n    //         return response\r\n    //     })\r\n    //     .then(response => {\r\n    //         console.log(response)\r\n    //         const appointments = response.availableTimeSlot.map(appointment => appointment.validFor);\r\n    //         //console.log(appointments);\r\n    //         dispatch(getAppointmentsSucess(appointments))\r\n    //     })\r\n    //     .catch(error => {\r\n    //         console.log(\"error\" ,error);\r\n    //         dispatch(getAppointmentsFailure(error.message))\r\n    //     })\r\n    // }\r\n}","export const GET_APPOINTMENTS_REQUEST = \"getAppointmentsRequest\"\r\nexport const GET_APPOINTMENTS_SUCESS = \"getAppointmentsSucess\"\r\nexport const GET_APPOINTMENTS_FAILURE = \"getAppointmentsFailure\"\r\nexport const RESERVE_APPOINTMENT_REQUEST = \"reserveAppointmentRequest\"\r\nexport const RESERVE_APPOINTMENT_SUCESS = \"reserveAppointmentSucess\"\r\nexport const RESERVE_APPOINTMENT_FAILURE = \"reserveAppointmentFailure\"\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nexport default function PaymentForm() {\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Payment method\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"cardName\" label=\"Name on card\" fullWidth autoComplete=\"cc-name\" />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"cardNumber\"\r\n            label=\"Card number\"\r\n            fullWidth\r\n            autoComplete=\"cc-number\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField required id=\"expDate\" label=\"Expiry date\" fullWidth autoComplete=\"cc-exp\" />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            required\r\n            id=\"cvv\"\r\n            label=\"CVV\"\r\n            helperText=\"Last three digits on signature strip\"\r\n            fullWidth\r\n            autoComplete=\"cc-csc\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <FormControlLabel\r\n            control={<Checkbox color=\"secondary\" name=\"saveCard\" value=\"yes\" />}\r\n            label=\"Remember credit card details for next time\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\n\r\nexport default function AddressForm() {\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Create Your BT ID\r\n      </Typography>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            label=\"First name\"\r\n            fullWidth\r\n            autoComplete=\"given-name\" value=\"John\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          \r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            label=\"Last name\"\r\n            fullWidth\r\n            autoComplete=\"family-name\" value=\"Shelton\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          \r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"address1\"\r\n            name=\"address1\"\r\n            label=\"Mobile Contact Number\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line1\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          \r\n          </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            id=\"address2\"\r\n            name=\"address2\"\r\n            label=\"Email Address\"\r\n            fullWidth\r\n            autoComplete=\"shipping address-line2\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          \r\n          </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"zip\"\r\n            name=\"zip\"\r\n            label=\"Postal code\"\r\n            fullWidth\r\n            autoComplete=\"shipping postal-code\" value=\"PO16 7GZ\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          \r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <TextField\r\n            required\r\n            id=\"password\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            fullWidth\r\n            type=\"password\"\r\n            autoComplete=\"shipping postal-code\" value=\"password\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n        \r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst products = [\r\n  { name: 'Broadband', desc: 'Full Fibre 900 Broadband Only Product', price: '$26.99' },\r\n  { name: 'Upfront cost', desc: '', price: '$9.99' },\r\n];\r\nconst addresses = [ 'Hampshire', 'PO16 7GZ', 'UK'];\r\nconst payments = [\r\n  { name: 'Card type', detail: 'Visa' },\r\n  { name: 'Card holder', detail: 'Mr John Shelton' },\r\n  { name: 'Card number', detail: 'xxxx-xxxx-xxxx-1234' },\r\n  { name: 'Expiry date', detail: '04/2024' },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  listItem: {\r\n    padding: theme.spacing(1, 0),\r\n  },\r\n  total: {\r\n    fontWeight: 700,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function Review() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Order summary\r\n      </Typography>\r\n      <List disablePadding>\r\n        {products.map((product) => (\r\n          <ListItem className={classes.listItem} key={product.name}>\r\n            <ListItemText primary={product.name} secondary={product.desc} />\r\n            <Typography variant=\"body2\">{product.price}</Typography>\r\n          </ListItem>\r\n        ))}\r\n        <ListItem className={classes.listItem}>\r\n          <ListItemText primary=\"Total\" />\r\n          <Typography variant=\"subtitle1\" className={classes.total}>\r\n            $34.06\r\n          </Typography>\r\n        </ListItem>\r\n      </List>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Hub Delivery Address\r\n          </Typography>\r\n          <Typography gutterBottom>John Shelton</Typography>\r\n          <Typography gutterBottom>{addresses.join(', ')}</Typography>\r\n        </Grid>\r\n        <Grid item container direction=\"column\" xs={12} sm={6}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n            Payment details\r\n          </Typography>\r\n          <Grid container>\r\n            {payments.map((payment) => (\r\n              <React.Fragment key={payment.name}>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.name}</Typography>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Typography gutterBottom>{payment.detail}</Typography>\r\n                </Grid>\r\n              </React.Fragment>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\n// import Products from './Products';\r\nimport AppointmentsContainer from '../containers/AppointmentsContainer';\r\nimport PaymentForm from './PaymentForm';\r\nimport AddressForm from './AddressForm';\r\nimport Review from './Review';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        BT\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  layout: {\r\n    width: 'auto',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 750,\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(6),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(3, 0, 5),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst steps = ['Personal Details','Appointment', 'Payment details', 'Review your order'];\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case 0:\r\n      return <AddressForm />;\r\n    case 1:\r\n      return <AppointmentsContainer />;\r\n    case 2:\r\n      return <PaymentForm />;\r\n    case 3:\r\n      return <Review />;\r\n    default:\r\n      throw new Error('Unknown step');\r\n  }\r\n}\r\n\r\nexport default function Checkout() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleNext = () => {\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      {/* <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n            Company name\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar> */}\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n            Full Fibre Prototype   \r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((label) => (\r\n              <Step key={label}>\r\n                <StepLabel>{label}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          <React.Fragment>\r\n            {activeStep === steps.length ? (\r\n              <React.Fragment>\r\n                <Typography variant=\"h5\" gutterBottom>\r\n                  Thank you for your order.\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\">\r\n                  Your order number is #2001539. We have emailed your order confirmation, and will\r\n                  send you an update when your order has shipped.\r\n                </Typography>\r\n              </React.Fragment>\r\n            ) : (\r\n              <React.Fragment>\r\n                {getStepContent(activeStep)}\r\n                <div className={classes.buttons}>\r\n                  {activeStep !== 0 && (\r\n                    <Button onClick={handleBack} className={classes.button}>\r\n                      Back\r\n                    </Button>\r\n                  )}\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleNext}\r\n                    className={classes.button}\r\n                  >\r\n                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                  </Button>\r\n                </div>\r\n              </React.Fragment>\r\n            )}\r\n          </React.Fragment>\r\n        </Paper>\r\n        <Copyright />\r\n      </main>\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\nimport './App.css';\n// import {BrowserRouter as Router , Route,  Switch } from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar'\n// import AppointmentsContainer from './containers/AppointmentsContainer';\n// import Products from '../src/components/Products'\n// import HorizontalLinearStepper from './components/ProgressSteps';\nimport Checkout from './components/Checkout';\n\nfunction App(props) {\n  \n   return (\n      <React.Fragment>\n         <Navbar expand=\"lg\" bg=\"primary\" variant=\"dark\">\n           \n    <Navbar.Brand href=\"#home\">\n      <img\n        alt=\"\"\n        src=\"/logo.svg\"\n        width=\"30\"\n        height=\"30\"\n        className=\"d-inline-block align-top\"\n      />{' '}\n      BT\n    </Navbar.Brand>\n  </Navbar>\n  \n  <div className=\"container\">\n    <br></br>\n  \n  {/* <HorizontalLinearStepper /> */}\n  <Checkout />\n  {/* <Router>\n     \n      <Switch>\n        <Route  path=\"/reserve\" component={AppointmentsContainer} />        \n        <Route exact path=\"/home\" component={Products} />\n        <Route exact path=\"/\" component={Checkout} />        \n      </Switch>      \n    </Router> */}\n  \n            </div>\n        \n      </React.Fragment>\n      \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actions from '../actions/constants/ActionConstants'\r\nconst initState = {\r\n    isLoading : false,\r\n    appointments : []\r\n}\r\n\r\nconst appointmentsReducer = (state = initState,action) =>{\r\n    switch(action.type){\r\n        case actions.GET_APPOINTMENTS_REQUEST:\r\n            return state;\r\n        case actions.GET_APPOINTMENTS_SUCESS:\r\n                return {...state,appointments: action.appointments, isLoading:action.isLoading};\r\n        case actions.GET_APPOINTMENTS_FAILURE:\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nexport default appointmentsReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\n//import createLogger from 'redux-logger'\n//import cartReducer from './reducers/cartReducer';\n\n// import { Router , Route,  Switch } from 'react-router-dom';\n// import { browserHistory } from 'react-router';\nimport appointmentsReducer from './reducers/appointmentsReducer';\n\n\n\n\nconst middleware = applyMiddleware(thunk)\nconst store = createStore(appointmentsReducer, middleware)\n\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n  <Provider store={store}>\n     <App />\n    {/* <Router history={history}> */}\n    \n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/appointmentMsg.4a7b429e.jpg\";"],"sourceRoot":""}